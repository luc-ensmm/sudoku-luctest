/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface_Graphique;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.io.File;
import java.util.Random;
import javax.swing.JOptionPane;
import sudoku.Algorithm;
import sudoku.Grille;
import sudoku.Joueur;
import sudoku.Sudoku;

/**
 *
 * @author yannE
 */
public class Menu_Principal extends javax.swing.JFrame {

    /**
     * Creates new form Menu_Principal
     */
    
    public Menu_Principal(){
        initComponents();
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        int screenHeight = screenSize.height;
        int screenWidth = screenSize.width;
        this.setLocation(screenWidth/2-this.getWidth()/2, screenHeight/2-this.getHeight()/2);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        playButton = new javax.swing.JButton();
        loadButton = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(preferredSize());
        getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        jPanel2.setBackground(new java.awt.Color(102, 204, 255));
        jPanel2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 100, 100));

        jPanel1.setPreferredSize(jPanel2.getPreferredSize());
        jPanel1.setLayout(new java.awt.GridLayout(0, 1, 1, 10));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("SUDOKU");
        jLabel1.setToolTipText("");
        jPanel1.add(jLabel1);
        jLabel1.getAccessibleContext().setAccessibleName("SudokuLabel");

        playButton.setText("Jouer !");
        playButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playButtonActionPerformed(evt);
            }
        });
        jPanel1.add(playButton);
        playButton.getAccessibleContext().setAccessibleName("playButton");

        loadButton.setText("Charger partie");
        loadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadButtonActionPerformed(evt);
            }
        });
        jPanel1.add(loadButton);
        loadButton.getAccessibleContext().setAccessibleName("loadButton");

        jButton3.setText("Entrer une grille");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3);
        jButton3.getAccessibleContext().setAccessibleName("inputGrilleButton");
        jButton3.getAccessibleContext().setAccessibleDescription("");

        jButton4.setText("Accéder au score");
        jPanel1.add(jButton4);
        jButton4.getAccessibleContext().setAccessibleName("scoreButton");

        jPanel2.add(jPanel1);

        getContentPane().add(jPanel2);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void playButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playButtonActionPerformed
        // TODO add your handling code here:
        
        Object[] options = {"Grilles existantes",
            "Génération aléatoire"};
        int n = JOptionPane.showOptionDialog(this,
                "Type de grille ?",
                "Paramètres de jeu",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null, //do not use a custom Icon
                options, //the titles of buttons
                options[1]); //default button title
        
        if (n == 0){ // Option grilles existantes
            
        }
        else if (n == 1) { // Options génération aléatoire
            Object[] possibilities = {"4", "9", "16"};
            String s = (String) JOptionPane.showInputDialog(
                    this,
                    "Taille de la grille",
                    "",
                    JOptionPane.PLAIN_MESSAGE,
                    null,
                    possibilities,
                    "4");

              
            if ((s != null) && (s.length() > 0)) {
                int tailleAuCarree = Integer.parseInt(s);
                Random ran = new Random();
                int nbCasesReveles = ran.nextInt(tailleAuCarree*tailleAuCarree-tailleAuCarree*2)
                        + tailleAuCarree*2;
                
                Grille solution = Algorithm.randomSolutionGenerator((int)Math.sqrt(tailleAuCarree));
                Grille grille = Algorithm.randomGrilleGenerator(solution, nbCasesReveles);
                
                this.setVisible(false);
                new GrilleGraphique(new Sudoku(new Joueur("",0),grille,solution)).setVisible(true);
            }
        }

        //this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
        
    }//GEN-LAST:event_playButtonActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void loadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadButtonActionPerformed
        // TODO add your handling code here:
        
        File saveFolder = new File("database/saves");
        File[] listOfSaves = saveFolder.listFiles();
        String[] savesName = new String [listOfSaves.length];
        String[] playersName = new String[listOfSaves.length];
        for (int i = 0; i < listOfSaves.length; i++) {
            if (listOfSaves[i].isFile() && listOfSaves[i].getName().contains("_partie")) {
                savesName[i] = listOfSaves[i].getName();
                playersName[i] = listOfSaves[i].getName().replace("_partie", "").replace(".txt", "");
            } else {
                throw new RuntimeException("Le dossier database/saves ne doit contenir"+
                        " que des fichiers .txt de la forme 'name_partie'");
            }
        }
        
        String nomJoueur = (String) JOptionPane.showInputDialog(
                this,
                "Choisissez votre partie",
                "Charger partie",
                JOptionPane.PLAIN_MESSAGE,
                null,
                playersName,playersName[0]);

        
        new GrilleGraphique(Sudoku.chargerGrille("database/saves/"+nomJoueur+"_partie")).setVisible(true);
        this.setVisible(false);
        
    }//GEN-LAST:event_loadButtonActionPerformed
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu_Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu_Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu_Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu_Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                new Menu_Principal().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton loadButton;
    private javax.swing.JButton playButton;
    // End of variables declaration//GEN-END:variables
    
    // More variables declaration
    
}
